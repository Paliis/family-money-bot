from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Updater, MessageHandler, Filters, CallbackContext
import os
import json
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime
import base64

# --- –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ---
CATEGORY_MAP = {
    "–ø—Ä–æ–¥—É–∫—Ç–∏": [],
    "—Ö–æ–∑—Ç–æ–≤–∞—Ä–∏": [],
    "—Ä–µ—Å—Ç–æ—Ä–∞–Ω–∏": [],
    "–∫–∏–Ω–æ": [],
    "–∫–æ—Ñ–µ–π–Ω—è": [],
    "–∞–≤—Ç–æ": ["–∑–∞–ø—Ä–∞–≤–∫–∞", "—Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ", "–º–æ–π–∫–∞", "—Å—Ç–æ—è–Ω–∫–∞", "–ø–∞—Ä–∫–æ–≤–∫–∞", "–∫—Ä–µ–¥–∏—Ç", "—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞"],
    "–∫–æ—Å–º–µ—Ç—ñ–∫–∞": [],
    "–∫—Ä–∞—Å–æ—Ç–∞": [],
    "–æ–¥–µ–∂–¥–∞, –æ–±—É–≤—å": [],
    "–∫–æ–º—É–Ω–∞–ª–∫–∞, –º–æ–±—ñ–ª—å–Ω–∏–π, —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç": [],
    "–¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è, –ø—Ä–∞–∑–¥–Ω–∏–∫–∏": [],
    "–∑–¥–æ—Ä–æ–≤—å–µ": ["–±–∞–¥–´", "–≤—Ä–∞—á–∏", "–ª–µ–∫–∞—Ä—Å—Ç–≤–∞", "–ø—Å–∏—Ö–æ–ª–æ–≥", "–º–∞—Å–∞–∂"],
    "—Å—Ç—Ä–µ–ª—å–±–∞": ["–ø–∞—Ç—Ä–æ–Ω–∏", "–≤–∑–Ω–æ—Å–∏", "–∑–∞–ø—á–∞—Å—Ç–∏"],
    "—É—á–µ–±–∞": ["—à–∫–æ–ª–∞", "–∞–Ω–≥–∏–π—Å–∫–∏–π", "–∏–Ω—Å—Ç–∏—Ç—É—Ç", "–¥—Ä—É–≥–æ–µ"],
    "—Ç–∞–∫—Å–∏": [],
    "–¥–æ–Ω–∞—Ç–∏": [],
    "–∫–≤—ñ—Ç–∏": [],
    "—Ä–æ–¥–∏—Ç–µ–ª—è–º": [],
    "—Ç–µ—Ö–Ω—ñ–∫–∞": []
}

# --- Google Sheets ---
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
google_creds_raw = base64.b64decode(os.environ["GOOGLE_CREDS_B64"]).decode("utf-8")
google_creds = json.loads(google_creds_raw)
creds = ServiceAccountCredentials.from_json_keyfile_dict(google_creds, scope)
client = gspread.authorize(creds)
sheet = client.open_by_key(os.environ["SPREADSHEET_ID"]).sheet1

pending_state = {}  # chat_id: {step, amount, category}

# --- –û–±—Ä–æ–±–Ω–∏–∫ ---
def handle_message(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    user = update.message.from_user.first_name
    text = update.message.text.strip().lower()

    state = pending_state.get(chat_id, {})

    if state.get("step") == "await_category":
        category = text
        if category not in CATEGORY_MAP:
            keyboard = [[c] for c in CATEGORY_MAP.keys()]
            update.message.reply_text("–í–∏–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑ –∫–Ω–æ–ø–æ–∫:", reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True))
            return
        if CATEGORY_MAP[category]:
            pending_state[chat_id] = {"step": "await_subcategory", "amount": state["amount"], "category": category}
            subcat_keyboard = [[s] for s in CATEGORY_MAP[category]]
            update.message.reply_text(f"'{category}' –º–∞—î –ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó. –û–±–µ—Ä–∏ –æ–¥–Ω—É:", reply_markup=ReplyKeyboardMarkup(subcat_keyboard, one_time_keyboard=True, resize_keyboard=True))
            return
        sheet.append_row([datetime.now().isoformat(), user, state["amount"], category, ""])
        update.message.reply_text(f"üìÇ {state['amount']} –≥—Ä–Ω –∑–∞–ø–∏—Å–∞–Ω–æ –≤ '{category}'")
        pending_state.pop(chat_id)
        return

    if state.get("step") == "await_subcategory":
        sheet.append_row([datetime.now().isoformat(), user, state["amount"], state["category"], text])
        update.message.reply_text(f"üìÇ {state['amount']} –≥—Ä–Ω –∑–∞–ø–∏—Å–∞–Ω–æ –≤ '{state['category']} > {text}'")
        pending_state.pop(chat_id)
        return

    # –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ —á–∏—Å–ª–æ ‚Äî —á–µ–∫–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
    if text.replace(".", "", 1).isdigit():
        pending_state[chat_id] = {"step": "await_category", "amount": text}
        keyboard = [[c] for c in CATEGORY_MAP.keys()]
        update.message.reply_text("–û–∫–µ–π, —Ç–µ–ø–µ—Ä –æ–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:", reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True))
        return

    update.message.reply_text("ü§ñ –ù–∞–ø–∏—à–∏ —Å—É–º—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ '1000'")

# --- –ó–∞–ø—É—Å–∫ ---
updater = Updater(os.environ["BOT_TOKEN"], use_context=True)
dp = updater.dispatcher
dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
updater.start_polling()
print("‚úÖ FamilyMoneyBot –ø—Ä–∞—Ü—é—î")
updater.idle()
