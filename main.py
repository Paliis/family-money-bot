from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Updater, MessageHandler, Filters, CallbackContext
import os
import json
import gspread
import base64
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# --- –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ---
CATEGORY_MAP = {
    "–ø—Ä–æ–¥—É–∫—Ç–∏": [],
    "—Ö–æ–∑—Ç–æ–≤–∞—Ä–∏": [],
    "—Ä–µ—Å—Ç–æ—Ä–∞–Ω–∏": [],
    "–∫–∏–Ω–æ": [],
    "–∫–æ—Ñ–µ–π–Ω—è": [],
    "–∞–≤—Ç–æ": ["–∑–∞–ø—Ä–∞–≤–∫–∞", "—Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ", "–º–æ–π–∫–∞", "—Å—Ç–æ—è–Ω–∫–∞", "–ø–∞—Ä–∫–æ–≤–∫–∞", "–∫—Ä–µ–¥–∏—Ç", "—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞"],
    "–∫–æ—Å–º–µ—Ç—ñ–∫–∞": [],
    "–∫—Ä–∞—Å–æ—Ç–∞": [],
    "–æ–¥–µ–∂–¥–∞, –æ–±—É–≤—å": [],
    "–∫–æ–º—É–Ω–∞–ª–∫–∞, –º–æ–±—ñ–ª—å–Ω–∏–π, —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç": [],
    "–¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è, –ø—Ä–∞–∑–¥–Ω–∏–∫–∏": [],
    "–∑–¥–æ—Ä–æ–≤—å–µ": ["–±–∞–¥–´", "–≤—Ä–∞—á–∏", "–ª–µ–∫–∞—Ä—Å—Ç–≤–∞", "–ø—Å–∏—Ö–æ–ª–æ–≥", "–º–∞—Å–∞–∂"],
    "—Å—Ç—Ä–µ–ª—å–±–∞": ["–ø–∞—Ç—Ä–æ–Ω–∏", "–≤–∑–Ω–æ—Å–∏", "–∑–∞–ø—á–∞—Å—Ç–∏"],
    "—É—á–µ–±–∞": ["—à–∫–æ–ª–∞", "–∞–Ω–≥–∏–π—Å–∫–∏–π", "–∏–Ω—Å—Ç–∏—Ç—É—Ç", "–¥—Ä—É–≥–æ–µ"],
    "—Ç–∞–∫—Å–∏": [],
    "–¥–æ–Ω–∞—Ç–∏": [],
    "–∫–≤—ñ—Ç–∏": [],
    "—Ä–æ–¥–∏—Ç–µ–ª—è–º": [],
    "—Ç–µ—Ö–Ω—ñ–∫–∞": []
}

# --- Google Sheets ---
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
google_creds_b64 = os.environ["GOOGLE_CREDS_B64"]
google_creds_raw = base64.b64decode(google_creds_b64).decode("utf-8")
google_creds = json.loads(google_creds_raw)
creds = ServiceAccountCredentials.from_json_keyfile_dict(google_creds, scope)
client = gspread.authorize(creds)
sheet = client.open_by_key(os.environ["SPREADSHEET_ID"]).sheet1

pending_categories = {}  # chat_id: (amount, category)

# --- –û–±—Ä–æ–±–Ω–∏–∫ ---
def handle_message(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    user = update.message.from_user.first_name
    text = update.message.text.strip().lower()

    if chat_id in pending_categories:
        amount, main_category = pending_categories.pop(chat_id)
        subcat = text
        sheet.append_row([datetime.now().isoformat(), user, amount, main_category, subcat])
        update.message.reply_text(f"üìÇ {amount} –≥—Ä–Ω –∑–∞–ø–∏—Å–∞–Ω–æ –≤ '{main_category} > {subcat}'")
        return

    parts = text.split(" ", 1)
    if len(parts) != 2 or not parts[0].replace(".", "", 1).isdigit():
        update.message.reply_text("ü§ñ –§–æ—Ä–º–∞—Ç –º–∞—î –±—É—Ç–∏ —Ç–∏–ø—É '100 –ø—Ä–æ–¥—É–∫—Ç–∏'")
        return

    amount, category = parts[0], parts[1]

    # –ü–æ—à—É–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó (—Ç–æ—á–Ω–µ –∞–±–æ —á–∞—Å—Ç–∫–æ–≤–µ —Å–ø—ñ–≤–ø–∞–¥—ñ–Ω–Ω—è)
    found_category = None
    for cat in CATEGORY_MAP:
        if category == cat or category.startswith(cat):
            found_category = cat
            break

    if not found_category:
        keyboard = [[c] for c in CATEGORY_MAP.keys()]
        update.message.reply_text(
            f"–ù–µ –∑–Ω–∞—é –∫–∞—Ç–µ–≥–æ—Ä—ñ—é '{category}'. –û–±–µ—Ä–∏ –∑ –º–µ–Ω—é:",
            reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
        )
        return

    if CATEGORY_MAP[found_category]:
        pending_categories[chat_id] = (amount, found_category)
        subcat_keyboard = [[s] for s in CATEGORY_MAP[found_category]]
        update.message.reply_text(
            f"'{found_category}' –º–∞—î –ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó. –û–±–µ—Ä–∏ –æ–¥–Ω—É:",
            reply_markup=ReplyKeyboardMarkup(subcat_keyboard, one_time_keyboard=True, resize_keyboard=True)
        )
    else:
        sheet.append_row([datetime.now().isoformat(), user, amount, found_category, ""])
        update.message.reply_text(f"üìÇ {amount} –≥—Ä–Ω –∑–∞–ø–∏—Å–∞–Ω–æ –≤ '{found_category}'")

# --- –ó–∞–ø—É—Å–∫ ---
updater = Updater(os.environ["BOT_TOKEN"], use_context=True)
dp = updater.dispatcher
dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
updater.start_polling()
print("‚úÖ FamilyMoneyBot –ø—Ä–∞—Ü—é—î")
updater.idle()
